generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int                 @id @default(autoincrement())
  email                String?             @unique
  name                 String?
  number               String              @unique
  password             String
  OnRampTransaction    OnRampTransaction[]
  Balance              Balance[]
  sentTransaction      P2PTransactions[]   @relation(name: "fromUserRelation")
  receivedTransactions P2PTransactions[]   @relation(name: "toUserRelation")
}

model Merchant {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  auth_type AuthType
}

model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    Int
  User      User         @relation(fields: [userId], references: [id])
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  User   User @relation(fields: [userId], references: [id])
}

model P2PTransactions {
  id         Int      @id @default(autoincrement())
  amount     Int
  startTime  DateTime
  fromUserId Int
  fromUser   User     @relation(name: "fromUserRelation", fields: [fromUserId], references: [id])
  toUserId   Int
  toUser     User     @relation(name: "toUserRelation", fields: [toUserId], references: [id])
}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {
  Success
  Failure
  Processing
}
